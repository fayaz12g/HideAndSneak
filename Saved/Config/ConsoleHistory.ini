[ConsoleHistoryPython]
History=create.py
History=ls
History=ls -l
History=cd
History="import os\r\nimport getpass\r\nimport unreal\r\n\r\n# Function to recursively search for GIF files\r\ndef find_gif_files(directory):\r\n    gif_files = []\r\n    for root, dirs, files in os.walk(directory):\r\n        for file in files:\r\n            if file.endswith(\".gif\"):\r\n                gif_files.append(os.path.join(root, file))\r\n    return gif_files\r\n\r\n# Get the current user\'s username\r\nusername = getpass.getuser()\r\n\r\n# Input folder containing GIFs (nested recursively)\r\ninput_folder = rf\"C:\\Users\\{username}\\Documents\\GitHub\\HideAndSneak\\Sprites\\sneaker\\sneaker_anim_gifs\"\r\n\r\n# Get a list of all GIF files in the directory (recursively)\r\ngif_files = find_gif_files(input_folder)\r\n\r\n# Iterate over each GIF file\r\nfor gif_file in gif_files:\r\n    # Load the GIF texture\r\n    gif_texture = unreal.EditorAssetLibrary.load_asset(gif_file)\r\n\r\n    # Get the directory and filename of the GIF\r\n    gif_dir, gif_name = os.path.split(gif_file)\r\n    \r\n    # Create Flipbook asset with the same name as the GIF\r\n    flipbook_name = os.path.splitext(gif_name)[0]\r\n    flipbook_path = os.path.join(gif_dir, flipbook_name)\r\n    flipbook = unreal.AssetToolsHelpers.get_asset_tools().create_asset(\r\n        flipbook_name, gif_dir, unreal.Flipbook, unreal.FlipbookFactoryNew())\r\n\r\n    # Set the sprite texture for the flipbook\r\n    unreal.SpritesheetHelperLibrary.set_sprites_from_textures(\r\n        flipbook, [gif_texture])\r\n\r\n    # Save the flipbook\r\n    unreal.EditorAssetLibrary.save_loaded_asset(flipbook)\r\n\r\n    # Print confirmation\r\n    print(\"Converted GIF to Flipbook:\", gif_file)\r\n\r\nprint(\"Conversion complete.\")\r\n"
History="import os\r\nimport getpass\r\nimport unreal\r\n\r\n# Function to recursively search for GIF files\r\ndef find_gif_files(directory):\r\n    gif_files = []\r\n    for root, dirs, files in os.walk(directory):\r\n        for file in files:\r\n            if file.endswith(\".gif\"):\r\n                gif_files.append(os.path.join(root, file))\r\n    return gif_files\r\n\r\n# Get the current user\'s username\r\nusername = getpass.getuser()\r\n\r\n# Input folder containing GIFs (nested recursively)\r\ninput_folder = rf\"C:\\Users\\{username}\\Documents\\GitHub\\HideAndSneak\\Sprites\\sneaker\\sneaker_anim_gifs\"\r\n\r\n# Get a list of all GIF files in the directory (recursively)\r\ngif_files = find_gif_files(input_folder)\r\n\r\n# Create a material instance for flipbook-like animations\r\nmaterial = unreal.MaterialInstanceDynamic(unreal.Material.get_default_material(unreal.MATERIAL_DOMAIN_SURFACE))\r\n\r\n# Iterate over each GIF file\r\nfor gif_file in gif_files:\r\n    # Load the GIF texture\r\n    gif_texture = unreal.EditorAssetLibrary.load_asset(gif_file)\r\n\r\n    # Set the GIF texture as the emissive texture for the material instance\r\n    material.set_texture_parameter_value(\"Texture\", gif_texture)\r\n\r\n    # Create a Material Instance for each GIF\r\n    material_instance = unreal.MaterialInstanceConstant.cast(unreal.AssetToolsHelpers.get_asset_tools().create_asset(\r\n        os.path.splitext(os.path.basename(gif_file))[0], os.path.dirname(gif_file), unreal.MaterialInstanceConstant, unreal.MaterialInstanceConstantFactoryNew()))\r\n\r\n    # Apply the material to the Material Instance\r\n    material_instance.set_material(material)\r\n\r\n    # Save the Material Instance\r\n    unreal.EditorAssetLibrary.save_loaded_asset(material_instance)\r\n\r\n    # Print confirmation\r\n    print(\"Converted GIF to Material Instance:\", gif_file)\r\n\r\nprint(\"Conversion complete.\")\r\n"
History="import os\r\nimport getpass\r\nimport unreal\r\n\r\n# Function to recursively search for GIF files\r\ndef find_gif_files(directory):\r\n    gif_files = []\r\n    for root, dirs, files in os.walk(directory):\r\n        for file in files:\r\n            if file.endswith(\".gif\"):\r\n                gif_files.append(os.path.join(root, file))\r\n    return gif_files\r\n\r\n# Get the current user\'s username\r\nusername = getpass.getuser()\r\n\r\n# Input folder containing GIFs (nested recursively)\r\ninput_folder = rf\"C:\\Users\\{username}\\Documents\\GitHub\\HideAndSneak\\Sprites\\sneaker\\sneaker_anim_gifs\"\r\n\r\n# Get a list of all GIF files in the directory (recursively)\r\ngif_files = find_gif_files(input_folder)\r\n\r\n# Iterate over each GIF file\r\nfor gif_file in gif_files:\r\n    # Load the GIF texture\r\n    gif_texture = unreal.EditorAssetLibrary.load_asset(gif_file)\r\n\r\n    # Create a Material and set the GIF texture as the emissive color\r\n    material = unreal.Material()\r\n    material.set_emissive_color(unreal.LinearColor(1.0, 1.0, 1.0))  # Set white as the default color\r\n    material.set_emissive_texture_parameter(\"Texture\", gif_texture)\r\n\r\n    # Create a Material Instance Dynamic\r\n    material_instance = unreal.MaterialInstanceDynamic(material)\r\n\r\n    # Set the material instance to use the GIF texture\r\n    material_instance.set_texture_parameter_value(\"Texture\", gif_texture)\r\n\r\n    # Save the Material Instance\r\n    material_instance_path = os.path.splitext(gif_file)[0] + \"_MaterialInstance\"\r\n    unreal.EditorAssetLibrary.save_loaded_asset(material_instance, material_instance_path)\r\n\r\n    # Print confirmation\r\n    print(\"Converted GIF to Material Instance:\", gif_file)\r\n\r\nprint(\"Conversion complete.\")\r\n"
History="import os\r\nimport getpass\r\nimport unreal\r\n\r\n# Function to recursively search for GIF files\r\ndef find_gif_files(directory):\r\n    gif_files = []\r\n    for root, dirs, files in os.walk(directory):\r\n        for file in files:\r\n            if file.endswith(\".gif\"):\r\n                gif_files.append(os.path.join(root, file))\r\n    return gif_files\r\n\r\n# Get the current user\'s username\r\nusername = getpass.getuser()\r\n\r\n# Input folder containing GIFs (nested recursively)\r\ninput_folder = rf\"C:\\Users\\{username}\\Documents\\GitHub\\HideAndSneak\\Sprites\\sneaker\\sneaker_anim_gifs\"\r\n\r\n# Get a list of all GIF files in the directory (recursively)\r\ngif_files = find_gif_files(input_folder)\r\n\r\n# Iterate over each GIF file\r\nfor gif_file in gif_files:\r\n    # Load the GIF texture\r\n    gif_texture = unreal.EditorAssetLibrary.load_asset(gif_file)\r\n\r\n    # Create a Material Instance Dynamic\r\n    material_instance = unreal.MaterialInstanceDynamic.unsafe_construct(unreal.Material.get_default_material(unreal.MATERIAL_DOMAIN_SURFACE))\r\n\r\n    # Set the GIF texture as the emissive texture parameter\r\n    material_instance.set_texture_parameter_value(\"Texture\", gif_texture)\r\n\r\n    # Save the Material Instance\r\n    material_instance_path = os.path.splitext(gif_file)[0] + \"_MaterialInstance\"\r\n    unreal.EditorAssetLibrary.save_loaded_asset(material_instance, material_instance_path)\r\n\r\n    # Print confirmation\r\n    print(\"Converted GIF to Material Instance:\", gif_file)\r\n\r\nprint(\"Conversion complete.\")\r\n"

[ConsoleHistory]
History="import os\r\nimport getpass\r\nimport unreal\r\n\r\n# Function to recursively search for GIF files\r\ndef find_gif_files(directory):\r\n    gif_files = []\r\n    for root, dirs, files in os.walk(directory):\r\n        for file in files:\r\n            if file.endswith(\".gif\"):\r\n                gif_files.append(os.path.join(root, file))\r\n    return gif_files\r\n\r\n# Get the current user\'s username\r\nusername = getpass.getuser()\r\n\r\n# Input folder containing GIFs (nested recursively)\r\ninput_folder = rf\"C:\\Users\\{username}\\Documents\\GitHub\\HideAndSneak\\Sprites\\sneaker\\sneaker_anim_gifs\"\r\n\r\n# Get a list of all GIF files in the directory (recursively)\r\ngif_files = find_gif_files(input_folder)\r\n\r\n# Create a material instance for flipbook-like animations\r\nmaterial = unreal.MaterialInstanceDynamic(unreal.Material.get_default_material(unreal.MATERIAL_DOMAIN_SURFACE))\r\n\r\n# Iterate over each GIF file\r\nfor gif_file in gif_files:\r\n    # Load the GIF texture\r\n    gif_texture = unreal.EditorAssetLibrary.load_asset(gif_file)\r\n\r\n    # Set the GIF texture as the emissive texture for the material instance\r\n    material.set_texture_parameter_value(\"Texture\", gif_texture)\r\n\r\n    # Create a Material Instance for each GIF\r\n    material_instance = unreal.MaterialInstanceConstant.cast(unreal.AssetToolsHelpers.get_asset_tools().create_asset(\r\n        os.path.splitext(os.path.basename(gif_file))[0], os.path.dirname(gif_file), unreal.MaterialInstanceConstant, unreal.MaterialInstanceConstantFactoryNew()))\r\n\r\n    # Apply the material to the Material Instance\r\n    material_instance.set_material(material)\r\n\r\n    # Save the Material Instance\r\n    unreal.EditorAssetLibrary.save_loaded_asset(material_instance)\r\n\r\n    # Print confirmation\r\n    print(\"Converted GIF to Material Instance:\", gif_file)\r\n\r\nprint(\"Conversion complete.\")\r\n"

